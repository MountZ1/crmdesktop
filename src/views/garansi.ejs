<%- include('template/template') %>
<div class="container mx-auto">
    <h1 class="text-2xl font-bold text-center">Garansi</h1>
    <hr class="m-6">
    <div class="flex justify-between items-center pl-6 pr-6">
<<<<<<< HEAD
        <a href="#" class="bg-blue-500 text-white p-2 rounded font-bold invisible">Tambah</a>
=======
        <button onclick="openModal()" class="bg-blue-500 text-white p-2 rounded font-bold">Tambah</button>
>>>>>>> 7e5e88e (web only)
        <div>
            <div class="my-2 flex sm:flex-row flex-col justify-end float-right">
                <!-- Search Input -->
                <div class="relative flex-grow mb-1 sm:mb-0 sm:mr-2">
                    <span class="absolute inset-y-0 left-0 flex items-center pl-2">
                        <svg viewBox="0 0 24 24" class="h-4 w-4 fill-current text-gray-500">
                            <path d="M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z"></path>
                        </svg>
                    </span>
                    <input placeholder="Cari Invoice"
                        class="appearance-none rounded-l sm:rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none" id="search"/>
                </div>
            </div>
        </div>
        <div class="max-w-xs text-sm text-white rounded-md shadow-lg hidden" role="alert" id="messager">
          <div class="flex p-4">
            <span id="toast-message"></span>
            <div class="ml-auto">
              <button type="button" class="inline-flex flex-shrink-0 justify-center items-center h-4 w-4 rounded-md text-white/[.5] hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-red-800 focus:ring-red-500 transition-all text-sm ml-2" onclick="closeToast()">
                <span class="sr-only">Close</span>
                <svg class="w-3.5 h-3.5" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M0.92524 0.687069C1.126 0.486219 1.39823 0.373377 1.68209 0.373377C1.96597 0.373377 2.2382 0.486219 2.43894 0.687069L8.10514 6.35813L13.7714 0.687069C13.8701 0.584748 13.9882 0.503105 14.1188 0.446962C14.2494 0.39082 14.3899 0.361248 14.5321 0.360026C14.6742 0.358783 14.8151 0.38589 14.9468 0.439762C15.0782 0.493633 15.1977 0.573197 15.2983 0.673783C15.3987 0.774389 15.4784 0.894026 15.5321 1.02568C15.5859 1.15736 15.6131 1.29845 15.6118 1.44071C15.6105 1.58297 15.5809 1.72357 15.5248 1.85428C15.4688 1.98499 15.3872 2.10324 15.2851 2.20206L9.61883 7.87312L15.2851 13.5441C15.4801 13.7462 15.588 14.0168 15.5854 14.2977C15.5831 14.5787 15.4705 14.8474 15.272 15.046C15.0735 15.2449 14.805 15.3574 14.5244 15.3599C14.2437 15.3623 13.9733 15.2543 13.7714 15.0591L8.10514 9.38812L2.43894 15.0591C2.23704 15.2543 1.96663 15.3623 1.68594 15.3599C1.40526 15.3574 1.13677 15.2449 0.938279 15.046C0.739807 14.8474 0.627232 14.5787 0.624791 14.2977C0.62235 14.0168 0.730236 13.7462 0.92524 13.5441L6.59144 7.87312L0.92524 2.20206C0.724562 2.00115 0.611816 1.72867 0.611816 1.44457C0.611816 1.16047 0.724562 0.887983 0.92524 0.687069Z" fill="currentColor"/>
                </svg>
              </button>
            </div>
          </div>
        </div>
    </div>

    <div class="bg-white p-6">
        <div class="overflow-x-auto border-x border-t">
            <table class="table-auto w-full">
                <thead class="border-b">
                    <tr class="bg-gray-100">
                        <th class="text-center p-4 font-medium">ID</th>
                        <th class="text-center p-4 font-medium">Invoice</th>
                        <th class="text-center p-4 font-medium">Customer</th>
                        <th class="text-center p-4 font-medium">Tanggal Mulaik</th>
                        <th class="text-center p-4 font-medium">Tanggal Berakhir</th>
                        <th class="text-center p-4 font-medium">Status</th>
                        <th class="text-center p-4 font-medium">Action</th>
                    </tr>
                </thead>
                <tbody id="customerstable">
                    
                </tbody>
            </table>
        </div>
        <div id="pagination" class="px-5 py-5 bg-white border-t flex flex-col xs:flex-row items-center xs:justify-between">
           
        </div>
    </div>
<<<<<<< HEAD
</div>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        searchCustomers('', 1);
    })
=======

    <div id="main-modal" class="fixed inset-0 bg-gray-900 bg-opacity-50 flex items-center justify-center p-4 hidden">
        <div class="bg-white rounded-lg shadow-lg w-full max-w-screen-lg max-h-[calc(100vh-100px)] overflow-hidden">
            <div class="p-4 border-b border-gray-200 flex justify-between items-center">
                <h3 class="text-lg font-semibold">Invoice Selesai</h3>
                <button id="closeModal" class="text-gray-600 hover:text-gray-900" onclick="modalClose()">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
            <div class="p-4 overflow-y-auto max-h-[calc(100vh-200px)]">
                <table class="min-w-full bg-white">
                    <thead class="border">
                        <tr class="bg-gray-100">
                            <th class="text-center p-4 font-medium">ID</th>
                            <th class="text-center p-4 font-medium">Invoice</th>
                            <th class="text-center p-4 font-medium">Customer</th>
                            <th class="text-center p-4 font-medium">Tanggal Selesai</th>
                            <th class="text-center p-4 font-medium">Actions</th>
                        </tr>
                    </thead>
                    <tbody id="custtable">
                        <!-- Table rows will be populated here -->
                    </tbody>
                </table>
                <div id="modal-pagination" class="block text-xs xs:text-sm text-gray-900">
                    <!-- Pagination controls will be here -->
                </div>
            </div>
        </div>
    </div>

    <div class="fixed w-full inset-0 z-50 overflow-hidden flex justify-center items-center hidden" style="background: rgba(0,0,0,.7);" id="second-modal">
        <div class="shadow-lg modal-container bg-white w-4/12 md:max-w-11/12 mx-auto rounded z-50 overflow-y-auto max-h-[80vh]">
            <div class="modal-content py-4 text-left px-6">
                <div class="print-content">
                    <!--Body-->
                    <div class="my-5 mx-5" id="modal-body">
                        <!-- Content will be dynamically inserted here -->
                    </div>
                    <div class="border-b border border-dashed"></div>
                    <div class="py-4 justify-center items-center flex flex-col gap-2">
                        <p class="flex gap-2" id="tangal"></p>
                    </div>
                </div>
                <div class="flex justify-center pt-2 space-x-4 print-hidden">
                    <button type="button" class="px-4 bg-gray-200 py-2 rounded text-black hover:bg-gray-300 font-semibold" onclick="document.getElementById('second-modal').classList.add('hidden')">Close</button>
                    <button id="confirm-warranty" class="px-4 bg-blue-500 py-2 rounded-lg text-white hover:bg-blue-600 font-semibold">Confirm</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    const modal = document.getElementById('main-modal');
    modal.style.display = 'none';

    const modalClose = () => {
        modal.classList.remove('fadeIn');
        modal.classList.add('fadeOut');
        modal.style.display = 'none';
        document.getElementById('custtable').innerHTML = '';
    };

    const openModal = () => {
        modal.classList.remove('fadeOut');
        modal.classList.add('fadeIn');
        modal.style.display = 'flex';
        fetchSupplier().then(data => {
            // console.log(data);
           populateSuppliers(data);
        })
    };

    const fetchSupplier = async () => {
        const response = await fetch('/auth/warranty/trx');
        if (!response.ok) {
            const message = `An error has occured: ${response.status}`;
            throw new Error(message);
        }
        const data = await response.json();
        return data;
    };

    const populateSuppliers = (data) => {
        const tableBody = document.getElementById('custtable');
        data.invoices.forEach((pnj) => {
            const row = document.createElement('tr');
            if (pnj.status == 'Invalid'){
                row.className = 'border-b hover:bg-red-600 bg-red-500 text-white';
            } else{
                row.className = 'border-b hover:bg-gray-50';
            }
            row.innerHTML = `
                <td class="p-4 text-center">${pnj.id}</td>
                <td class="p-4 text-center">${pnj.invoice}</td>
                <td class="p-4 text-center">${pnj.customer}</td>
                <td class="p-4 text-center">${formatDate(pnj.tanggal_servis)}</td>
                <td class="p-4 text-center">
                    <button onclick="openSecondModal(${pnj.id}, '${pnj.tipe_penjualan}')" class="bg-blue-500 text-white p-2 rounded font-bold">Pilih</button>
                </td>
            `;
            tableBody.appendChild(row);
        });
        updatePagination(data.currentPage, data.totalPages, 'modal-pagination');
    };

    function openSecondModal(id, tipe) {
        const modal = document.getElementById('second-modal');
        modal.classList.remove('hidden');
        const body = document.getElementById('modal-body');
        const url = tipe === 'servis' ? `/auth/servis/${id}` : `/auth/penjualan/${id}`;
        fetch(url)
            .then(res => res.json())
            .then(data => {
                body.innerHTML = `
                     <div class=" border-b border border-dashed"></div>
                    <div class="flex flex-col gap-3 py-2 text-xs">
                        <p class="flex justify-between">
                        <span class="text-gray-400">Invoice :</span>
                        <span>${data.invoice}</span>
                        </p>
                        <p class="flex justify-between">
                        <span class="text-gray-400">Tanggal :</span>
                        <span>${formatDate(data.created_at)}</span>
                        </p>
                        <p class="flex justify-between">
                        <span class="text-gray-400">Customer :</span>
                        <span>${data.customer}</span>
                        </p>
                        <p class="flex justify-between">
                        <span class="text-gray-400">Total :</span>
                        <span>${formatDaNumber(data.biaya_total)}</span>
                        </p>
                    </div>
                    <div class=" border-b border mt-4"></div>
                    <div class="flex flex-col gap-3 pb-6 pt-2 text-xs">
                        <p class="flex justify-between">Service Name</p>
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nama Perbaikan</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Biaya perbaikan</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                ${data.servis.map(detail => `
                                    <tr>
                                        <td class="px-6 py-4 whitespace-nowrap">${detail.masalah}</td>
                                        <td class="px-6 py-4 whitespace-nowrap">${formatDaNumber(detail.biaya)}</td>
                                    </tr>
                                `).join('')}
                            </tbody>
                        </table>
                        <div class=" border-b border mt-4"></div>
                        <p class="flex justify-between">Komponen</p>
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Unit Price</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Quantity</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                ${data.items.map(detail => `
                                    <tr>
                                        <td class="px-6 py-4 whitespace-nowrap">${detail.komponen}</td>
                                        <td class="px-6 py-4 whitespace-nowrap">${formatDaNumber(detail.harga)}</td>
                                        <td class="px-6 py-4 whitespace-nowrap">${detail.jumlah}</td>
                                    </tr>
                                `).join('')}
                            </tbody>
                        </table>
                        <div class=" border-b border mt-4"></div>
                    </div>
                    <form method="POST" id="addForm" onsubmit="addWarranty(event)"> 
                        <div>
                            <input type="hidden" id="id" name="id" value="${data.id}">
                            <div>
                                <label for="name" class="text-md text-gray-600">Garansi</label>
                            </div>
                            <div>
                                <input type="text" id="lama" name="lama" autocomplete="off" class="h-10 p-2 w-full border-2 border-gray-300 rounded-md" placeholder="Lama Garansi (Bulan)">
                            </div>
                        </div> 
                    </form>
                `;
            });
            document.getElementById('confirm-warranty').addEventListener('click', addWarranty);
    }

    function addWarranty(event){
        event.preventDefault();
        const lama = document.getElementById('lama').value;
        const id = document.getElementById('id').value;
        fetch(`/auth/warranty`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                sales_id: id,
                lama: lama
            })
        })
        .then(response => {
            if (response.status === 201) {
                // Success: status 201 Created
                location.reload();
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error adding warranty: ' + error.message);
        });
    }

    function formatDate(datetimeString) {
        if (!datetimeString) return 'Invalid Date'; // Handle null or undefined dates
        
        const date = new Date(datetimeString);

        // Check if date is valid
        if (isNaN(date.getTime())) {
            console.error('Invalid date:', datetimeString);
            return 'Invalid Date';
        }

        return date.toISOString().split('T')[0]; // Only date part (YYYY-MM-DD)
    }

    document.addEventListener('DOMContentLoaded', function() {
        searchCustomers('', 1);
    });

    document.getElementById('search').addEventListener('input', function() {
        searchCustomers(this.value, 1);
    });

    function formatDaNumber(price){
      if (typeof price === 'number') {
        return Intl.NumberFormat('id-ID').format(price);
      }

      let val = price.replace(/\D/g, '')
      return Intl.NumberFormat('id-ID').format(val);
    }

>>>>>>> 7e5e88e (web only)
    async function searchCustomers(name, page) {
        const response = await fetch(`/auth/warranty/wr?name=${encodeURIComponent(name)}&page=${page}`);
        const data = await response.json();

        // Clear the existing table rows
        const tableBody = document.getElementById('customerstable');
        tableBody.innerHTML = '';

        // Update the table with new results
        data.warranty.forEach((pnj, index) => {
            const row = document.createElement('tr');
<<<<<<< HEAD
            row.className = 'border-b hover:bg-gray-50';
=======
            if (pnj.status == 'Invalid'){
                row.className = 'border-b hover:bg-red-600 bg-red-500 text-white';
            } else{
                row.className = 'border-b hover:bg-gray-50';
            }
>>>>>>> 7e5e88e (web only)

            row.innerHTML = `
                <td class="p-4 text-center">${index + 1}</td>
                <td class="p-4 text-center">${pnj.invoice}</td>
                <td class="p-4 text-center">${pnj.customer}</td>
                <td class="p-4 text-center">${formatDate(pnj.tanggal_mulai)}</td>
<<<<<<< HEAD
                <td class="p-4 text-center">${formatDate(pnj.tanggal_berakhir)}</td>
                <td class="p-4 text-center">${pnj.status}</td>
                <td class="p-4 space-x-2 text-center">
                    ${pnj.status != 'Dipakai' ? 
=======
                <td class="p-4 text-center">${formatDate(pnj.tanggal_selesai)}</td>
                <td class="p-4 text-center">${pnj.status}</td>
                <td class="p-4 space-x-2 text-center">
                    ${pnj.status == 'Belum Dipakai' ? 
>>>>>>> 7e5e88e (web only)
                        `<button onclick="editListener('${pnj.id}')" class="bg-yellow-400 hover:bg-yellow-500 rounded p-1">
                            Klaim
                        </button>`
                        : ''
                    }
                </td>
            `;

            tableBody.appendChild(row);
        });
<<<<<<< HEAD
        updatePagination(data.currentPage, data.totalPage);
    }

    function updatePagination(currentPage, totalPage) {
        const paginationContainer = document.getElementById('pagination');
=======
        updatePagination(data.currentPage, data.totalPage, 'pagination');
    }

    function updatePagination(currentPage, totalPage, komponen) {
        const paginationContainer = document.getElementById(komponen);
>>>>>>> 7e5e88e (web only)
        paginationContainer.innerHTML = '';

        const span = document.createElement('span');
        span.className = 'text-xs xs:text-sm text-gray-900';
        span.textContent = `Showing page ${currentPage} of ${totalPage} page`;
        paginationContainer.appendChild(span);

        const paginationControls = document.createElement('div');
        paginationControls.className = 'inline-flex mt-2 xs:mt-0 space-x-2';

        if (currentPage > 1) {
            const prevButton = document.createElement('a');
            prevButton.href = '#';
            prevButton.className = 'text-sm bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-4 rounded';
            prevButton.textContent = 'Prev';
            prevButton.addEventListener('click', (e) => {
                e.preventDefault();
                searchCustomers(document.getElementById('search').value, currentPage - 1);
            });
            paginationControls.appendChild(prevButton);
        }

        if (currentPage < totalPage) {
            const nextButton = document.createElement('a');
            nextButton.href = '#';
            nextButton.className = 'text-sm bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-4 rounded';
            nextButton.textContent = 'Next';
            nextButton.addEventListener('click', (e) => {
                e.preventDefault();
                searchCustomers(document.getElementById('search').value, currentPage + 1);
            });
            paginationControls.appendChild(nextButton);
        }

        paginationContainer.appendChild(paginationControls);
    }

    function formatDate(datetimeString) {
        if (!datetimeString) return 'Invalid Date'; // Handle null or undefined dates
        
        const date = new Date(datetimeString);

        // Check if date is valid
        if (isNaN(date.getTime())) {
            console.error('Invalid date:', datetimeString);
            return 'Invalid Date';
        }

        return date.toISOString().split('T')[0]; // Only date part (YYYY-MM-DD)
    }

    async function editListener(pembelianId) {
        // console.log(pembelianId);
        try {
            const response = await fetch(`/auth/warranty/${pembelianId}`, {
                                method: 'PUT',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                            });
            const data = await response.json();
            if (response.ok){
                location.reload();
            } else {
                document.getElementById('toast-message').textContent = 'Error: ' + data.message;
                document.getElementById('messager').classList.remove('hidden');
                document.getElementById('messager').classList.add('bg-red-500');
            }
        } catch (error) {
            document.getElementById('toast-message').textContent = 'Error: ' + error.message;
            document.getElementById('messager').classList.remove('hidden');
            document.getElementById('messager').classList.add('bg-red-500');   
        }
    }
    const closeToast = () =>{
        document.getElementById('messager').classList.add = 'hidden';
    }
</script>
<<<<<<< HEAD
<%- include('template/footer') %>
=======
<%- include('template/footer') %>
>>>>>>> 7e5e88e (web only)
