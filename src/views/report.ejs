<%- include('template/template') %>
<div class="container mx-auto">
    <h1 class="text-2xl font-bold text-center">Laporan</h1>
    <div class="max-w-xs text-sm text-white rounded-md shadow-lg hidden" role="alert" id="messager">
        <div class="flex p-4">
          <span id="toast-message"></span>
          <div class="ml-auto">
            <button type="button" class="inline-flex flex-shrink-0 justify-center items-center h-4 w-4 rounded-md text-white/[.5] hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-red-800 focus:ring-red-500 transition-all text-sm ml-2" onclick="closeToast()">
              <span class="sr-only">Close</span>
              <svg class="w-3.5 h-3.5" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M0.92524 0.687069C1.126 0.486219 1.39823 0.373377 1.68209 0.373377C1.96597 0.373377 2.2382 0.486219 2.43894 0.687069L8.10514 6.35813L13.7714 0.687069C13.8701 0.584748 13.9882 0.503105 14.1188 0.446962C14.2494 0.39082 14.3899 0.361248 14.5321 0.360026C14.6742 0.358783 14.8151 0.38589 14.9468 0.439762C15.0782 0.493633 15.1977 0.573197 15.2983 0.673783C15.3987 0.774389 15.4784 0.894026 15.5321 1.02568C15.5859 1.15736 15.6131 1.29845 15.6118 1.44071C15.6105 1.58297 15.5809 1.72357 15.5248 1.85428C15.4688 1.98499 15.3872 2.10324 15.2851 2.20206L9.61883 7.87312L15.2851 13.5441C15.4801 13.7462 15.588 14.0168 15.5854 14.2977C15.5831 14.5787 15.4705 14.8474 15.272 15.046C15.0735 15.2449 14.805 15.3574 14.5244 15.3599C14.2437 15.3623 13.9733 15.2543 13.7714 15.0591L8.10514 9.38812L2.43894 15.0591C2.23704 15.2543 1.96663 15.3623 1.68594 15.3599C1.40526 15.3574 1.13677 15.2449 0.938279 15.046C0.739807 14.8474 0.627232 14.5787 0.624791 14.2977C0.62235 14.0168 0.730236 13.7462 0.92524 13.5441L6.59144 7.87312L0.92524 2.20206C0.724562 2.00115 0.611816 1.72867 0.611816 1.44457C0.611816 1.16047 0.724562 0.887983 0.92524 0.687069Z" fill="currentColor"/>
              </svg>
            </button>
          </div>
        </div>
    </div>
    <hr class="m-6">
        <div class="max-w-xs text-sm text-white rounded-md shadow-lg hidden" role="alert" id="messager">
          <div class="flex p-4">
            <span id="toast-message"></span>
            <div class="ml-auto">
              <button type="button" class="inline-flex flex-shrink-0 justify-center items-center h-4 w-4 rounded-md text-white/[.5] hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-red-800 focus:ring-red-500 transition-all text-sm ml-2" onclick="closeToast()">
                <span class="sr-only">Close</span>
                <svg class="w-3.5 h-3.5" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M0.92524 0.687069C1.126 0.486219 1.39823 0.373377 1.68209 0.373377C1.96597 0.373377 2.2382 0.486219 2.43894 0.687069L8.10514 6.35813L13.7714 0.687069C13.8701 0.584748 13.9882 0.503105 14.1188 0.446962C14.2494 0.39082 14.3899 0.361248 14.5321 0.360026C14.6742 0.358783 14.8151 0.38589 14.9468 0.439762C15.0782 0.493633 15.1977 0.573197 15.2983 0.673783C15.3987 0.774389 15.4784 0.894026 15.5321 1.02568C15.5859 1.15736 15.6131 1.29845 15.6118 1.44071C15.6105 1.58297 15.5809 1.72357 15.5248 1.85428C15.4688 1.98499 15.3872 2.10324 15.2851 2.20206L9.61883 7.87312L15.2851 13.5441C15.4801 13.7462 15.588 14.0168 15.5854 14.2977C15.5831 14.5787 15.4705 14.8474 15.272 15.046C15.0735 15.2449 14.805 15.3574 14.5244 15.3599C14.2437 15.3623 13.9733 15.2543 13.7714 15.0591L8.10514 9.38812L2.43894 15.0591C2.23704 15.2543 1.96663 15.3623 1.68594 15.3599C1.40526 15.3574 1.13677 15.2449 0.938279 15.046C0.739807 14.8474 0.627232 14.5787 0.624791 14.2977C0.62235 14.0168 0.730236 13.7462 0.92524 13.5441L6.59144 7.87312L0.92524 2.20206C0.724562 2.00115 0.611816 1.72867 0.611816 1.44457C0.611816 1.16047 0.724562 0.887983 0.92524 0.687069Z" fill="currentColor"/>
                </svg>
              </button>
            </div>
          </div>
        </div>
    </div>
    <div class="flex items-center justify-center p-6">
        <div class="w-full bg-white shadow-md rounded-lg p-6 border">
            <p class="text-lg mb-6">Filter Data Berdasarkan Tanggal</p>
            <form id="reportForm" class="flex flex-col md:flex-row md:items-end md:space-x-6">
                <div class="flex-grow mb-4 md:mb-0">
                    <label for="startDate" class="block text-gray-700 font-bold mb-2">Tanggal Awal</label>
                    <input type="date" id="startDate" name="startDate" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                </div>
                <div class="flex-grow mb-4 md:mb-0">
                    <label for="endDate" class="block text-gray-700 font-bold mb-2">Tanggal Akhir</label>
                    <input type="date" id="endDate" name="endDate" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                </div>
                <div class="flex flex-row">
                    <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500">Filter</button>
                </div>
            </form>
        </div>
    </div>

    <button class="px-8 ml-8 bg-blue-500 py-2 rounded text-white hover:bg-blue-600 font-semibold hidden" onclick="printModal()" id="print">Print</button>
    <div class="bg-white p-6 hidden" id="tableContainer">
        <div class="overflow-x-auto border-x border-t">
            <table class="table-auto w-full">
                <thead class="border-b">
                    <tr class="bg-gray-100">
                        <th class="text-center p-4 font-medium">Invoice</th>
                        <th class="text-center p-4 font-medium">Total</th>
                    </tr>
                </thead>
                <tbody id="customerstable">
                    
                </tbody>
            </table>
        </div>
    </div>
    <iframe id="print-iframe" style="display: none;"></iframe>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('reportForm');
        const reportTableBody = document.getElementById('customerstable');
        const tableContainer = document.getElementById('tableContainer');

        form.addEventListener('submit', async function(e) {
            e.preventDefault(); // Prevent default form submission

            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            if (!startDate || !endDate) {
                showToast('Please select both start and end dates.', 'bg-red-500');
                return;
            }

                const response = await fetch(`/auth/report/get?startDate=${startDate}&endDate=${endDate}`, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                if (!response.ok) {
                   showToast(response.message, 'bg-red-500');
                }

                const data = await response.json();
                renderTable(data);
            function renderTable(data) {
                document.getElementById('print').classList.remove('hidden');
                reportTableBody.innerHTML = '';
                if (data.detail.length === 0) {
                    tableContainer.classList.add('hidden');
                    // You might want to show a "No data" message to the user here
                    return;
                }
        
                tableContainer.classList.remove('hidden');
        
                // Render total row
                // Render detail rows
                data.detail.forEach(item => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                    <td class="p-4 text-center">${item.invoice}</td>
<<<<<<< HEAD
                    <td class="p-4 text-center">${parseFloat(item.biaya)}</td>
=======
                    <td class="p-4 text-center">${formatDaNumber(item.biaya)}</td>
>>>>>>> 7e5e88e (web only)
                    `;
                    reportTableBody.appendChild(row);
                });

                const totalRow = document.createElement('tr');
                totalRow.innerHTML = `
                    <td class="py-2 px-4 border-b bg-gray-100 font-bold">Total</td>
<<<<<<< HEAD
                    <td class="py-2 px-8 border-b bg-gray-100 font-bold text-right">${data.total}</td>
=======
                    <td class="py-2 px-8 border-b bg-gray-100 font-bold text-right">${formatDaNumber(data.total)}</td>
>>>>>>> 7e5e88e (web only)
                `;
                reportTableBody.appendChild(totalRow);
        
            }
        
            function showToast(message, color) {
                const toast = document.getElementById('messager');
                const messageElement = document.getElementById('toast-message');

                toast.classList.remove('hidden');
                toast.classList.add(color);
                messageElement.textContent = message;
            }

        });
    });
    const closeToast = () =>{
        const toast = document.getElementById('messager');
        toast.classList.add('hidden');
    }

    function printModal() {
        const tableContainer = document.getElementById('tableContainer');
        if (!tableContainer) {
            console.error('Table container not found');
            return;
        }

        const modalContent = tableContainer.innerHTML;

        // Create a temporary iframe to handle printing
        const iframe = document.createElement('iframe');
        iframe.style.display = 'none';
        document.body.appendChild(iframe);

        // Write the HTML content to the iframe
        iframe.contentDocument.open();
        iframe.contentDocument.write(createIframeContent(modalContent));
        iframe.contentDocument.close();

        // Wait for the iframe to fully load before printing
        iframe.onload = () => {
            iframe.contentWindow.print();

            // Remove the iframe after printing
            setTimeout(() => {
                document.body.removeChild(iframe);
            }, 100);
        };
    }

    function createIframeContent(table) {
        return `
        <!DOCTYPE html>
        <html>
        <head>
            <style>
                @import url('https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css');
                @page {
                    margin: 0;
                    size: A4;
                }
                body {
                    -webkit-print-color-adjust: exact !important;
                    print-color-adjust: exact !important;
                }
                @media print {
                    .print-hidden {
                        display: none !important;
                    }
                }
            </style>
        </head>
        <body>
            <div class="print-content m-4 p-4">
                ${table}
            </div>
        </body>
        </html>
        `;
    }

<<<<<<< HEAD

</script>
<%- include('template/footer') %>
=======
    function formatDaNumber(price){
      if (typeof price === 'number') {
        return Intl.NumberFormat('id-ID').format(price);
      }

      let val = price.replace(/\D/g, '')
      return Intl.NumberFormat('id-ID').format(val);
    }

    function turnBackDaNumber(price){
      const rawValue = price.replace(/\./g, '');
      const finalPrice = parseInt(rawValue, 10);

      return finalPrice;
    }

</script>
<%- include('template/footer') %>
>>>>>>> 7e5e88e (web only)
